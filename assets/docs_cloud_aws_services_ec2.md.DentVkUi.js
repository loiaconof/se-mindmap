import{_ as s,c as e,o as a,ah as t}from"./chunks/framework.B4aElyqu.js";const g=JSON.parse('{"title":"Amazon Elastic Compute Cloud (EC2)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/cloud/aws/services/ec2.md","filePath":"docs/cloud/aws/services/ec2.md"}'),n={name:"docs/cloud/aws/services/ec2.md"};function l(r,i,o,c,d,h){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="amazon-elastic-compute-cloud-ec2" tabindex="-1">Amazon Elastic Compute Cloud (EC2) <a class="header-anchor" href="#amazon-elastic-compute-cloud-ec2" aria-label="Permalink to “Amazon Elastic Compute Cloud (EC2)”">​</a></h1><p><strong>Amazon Elastic Compute Cloud (EC2)</strong> is a web service that provides secure, resizable compute capacity in the cloud. It is designed to make web-scale cloud computing easier for developers by providing virtual servers, known as instances, on demand.</p><p>This service is a way to implement <a href="/se-mindmap/docs/cloud/services/">IaaS</a> con AWS.</p><p>It mainly consists in the capability of :</p><ul><li>Renting virtual machines (EC2)</li><li>Storing data on virtual drives (EBS)</li><li>Distributing load across machines (ELB)</li><li>Scaling the services using an auto-scaling group (ASG)</li></ul><h2 id="instances" tabindex="-1">Instances <a class="header-anchor" href="#instances" aria-label="Permalink to “Instances”">​</a></h2><ul><li>Virtual servers for running applications</li><li><a href="https://aws.amazon.com/ec2/instance-types/" target="_blank" rel="noreferrer">Instance Types</a> include: <ul><li>General Purpose</li><li>Compute Optimized</li><li>Memory Optimized</li><li>Storage Optimized</li><li>Accelerated Computing</li></ul></li><li><a href="https://instances.vantage.sh/" target="_blank" rel="noreferrer">Instance Types comparison</a></li></ul><details class="details custom-block"><summary>Instance Types</summary><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-82" id="tab-83" checked><label data-title="General Purpose" for="tab-83">General Purpose</label><input type="radio" name="group-82" id="tab-84"><label data-title="Compute Purpose" for="tab-84">Compute Purpose</label><input type="radio" name="group-82" id="tab-85"><label data-title="Memory Optimized" for="tab-85">Memory Optimized</label><input type="radio" name="group-82" id="tab-86"><label data-title="Storange Optimized" for="tab-86">Storange Optimized</label></div><div class="blocks"><div class="language-md active"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Great for diversity of workloads such as web servers or code repositories</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Balance between</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Compute</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Memory</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Networking</span></span></code></pre></div><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Great for compute-intensive tasks that require high performance processors</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Use Cases:</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Barch processing workloads</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Media transcoding</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> High performance web servers</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> High performance computing ( HPC )</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scientific modeling &amp; machine learning</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dedicated gaming servers</span></span></code></pre></div><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Fast performance for workloads that process large data sets in memory</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Use Cases:</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> High performance, relational/non-relational databases</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Distributed web scale cache stores</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> In-memory database optimized for BI ( Business Intellingence )</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Applications performing real-time processing of big unstructured data</span></span></code></pre></div><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Great for storage-intensive tasks that require:</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> high, sequential read and write access to large data sets on local storage</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Use Cases:</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> High frequency online transaction processing ( OLTP ) systems</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Relational &amp; NoSQL databases</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cache for in-memory databases ( e.g. Redis )</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Data warehousing applications</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Distributed file systems</span></span></code></pre></div></div></div></details><h2 id="security-groups" tabindex="-1">Security Groups <a class="header-anchor" href="#security-groups" aria-label="Permalink to “Security Groups”">​</a></h2><ul><li>Virtual firewalls that control inbound and outbound traffic on EC2 instances</li><li>Security groups rules can reference by IP or by security group</li><li>They regulate: <ul><li>Access to Ports</li><li>Authorised IP ranges - IPv4 and IPv6</li><li>Control of inbound network ( from other to the instance )</li><li>control of outbound network ( from the instance to other )</li></ul></li><li>Good to know: <ul><li><strong>Can be attached to multiple instances</strong></li><li><strong>Locked down to a region / VPC compination</strong></li><li><strong>Does live “outside” the EC2</strong> – if traffic is blocked the EC2 instance won’t see it</li><li><strong>maintain one separate security group for SSH access</strong></li><li><strong>inbound traffic</strong> is blocked by default</li><li><strong>outbound traffic</strong> is authorised by default</li></ul></li></ul><details class="details custom-block"><summary>Security Groups example</summary><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| Type            | Protocol | Port Range | Source            | Description    |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|-----------------|----------|------------|-------------------|----------------|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| HTTP            | TCP      | 80         | 0.0.0.0/0         | test http page |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| SSH             | TCP      | 22         | 122.149.196.85/32 |                |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| Custom TCP Rule | TCP      | 4567       | 0.0.0.0/0         | java app       |</span></span></code></pre></div></details><h2 id="elastic-ips" tabindex="-1">Elastic IPs <a class="header-anchor" href="#elastic-ips" aria-label="Permalink to “Elastic IPs”">​</a></h2><ul><li>Static, public IPv4 addresses for dynamic cloud computing.</li><li>Useful for replacing failed instances without changing your IP address.</li></ul><h2 id="placement-groups" tabindex="-1">Placement Groups <a class="header-anchor" href="#placement-groups" aria-label="Permalink to “Placement Groups”">​</a></h2><ul><li>Provide control over how instances are placed on the underlying hardware to optimize performance and availability</li><li>Placement Group Types: <ul><li><strong>Cluster Placement Group</strong><ul><li><strong>Purpose</strong>: Achieve low network latency and high network throughput</li><li><strong>Placement</strong>: Instances are placed physically close within a single Availability Zone</li><li><strong>Use Case</strong>: High-performance computing (HPC), big data workloads, tightly coupled node-to-node communication</li></ul></li><li><strong>Spread Placement Group</strong><ul><li><strong>Purpose</strong>: Maximize availability by placing instances on distinct hardware</li><li><strong>Placement</strong>: Each instance is placed on a separate rack (separate hardware)</li><li><strong>Use Case</strong>: Critical applications where hardware failure must not impact multiple instances</li><li><strong>Limit</strong>: Up to 7 running instances per AZ per spread group</li></ul></li><li><strong>Partition Placement Group</strong><ul><li><strong>Purpose</strong>: Separate groups of instances (partitions) to minimize failure impact</li><li><strong>Placement</strong>: Instances are divided into partitions, each on distinct racks with isolated network and power</li><li><strong>Use Case</strong>: Large-scale distributed systems like HDFS, Cassandra, or Kafka</li><li><strong>Limit</strong>: Up to 7 partitions per AZ (depending on the instance type and region)</li></ul></li></ul></li></ul><h2 id="eni-elastic-network-interfaces" tabindex="-1">ENI - Elastic Network Interfaces <a class="header-anchor" href="#eni-elastic-network-interfaces" aria-label="Permalink to “ENI - Elastic Network Interfaces”">​</a></h2><ul><li>Represents a <strong>virtual network card</strong> inside a specific availability zone (AZ)</li><li>Can be <strong>created independently</strong> and <strong>attached on the fly</strong> (move them) on EC2 instances <strong>for failover</strong></li><li>The ENI can have the <strong>following attributes</strong>: <ul><li>Primary private IPv4, one or more secondary IPv4</li><li>One Elastic IP (IPv4) per private IPv4</li><li>One Public IPv4</li><li>One or more security groups</li><li>A MAC address</li></ul></li><li><a href="https://aws.amazon.com/blogs/aws/new-elastic-network-interfaces-in-the-virtual-private-cloud/" target="_blank" rel="noreferrer">More on ENI</a></li></ul><h2 id="hibernate" tabindex="-1">Hibernate <a class="header-anchor" href="#hibernate" aria-label="Permalink to “Hibernate”">​</a></h2><ul><li>EC2 Hibernate allows the <strong>in-memory (RAM) state preservation writing the RAM state to a file in the root EBS volume</strong></li><li>Limitations: <ul><li>The <strong>root EBS Volume must be encrypted</strong></li><li>Instance <strong>RAM Size must be less than 150 GB</strong></li><li>An instance <strong>can NOT be hibernated more than 60 days</strong></li></ul></li><li><strong>Use cases</strong>: <ul><li>Long-running processing</li><li>Saving the RAM state</li><li>Services that take time to initialize</li></ul></li></ul><h2 id="amis-amazon-machine-images" tabindex="-1">AMIs - Amazon Machine Images <a class="header-anchor" href="#amis-amazon-machine-images" aria-label="Permalink to “AMIs - Amazon Machine Images”">​</a></h2><ul><li>AMI are a <strong>customization of an EC2 instance</strong><ul><li>You add your own software, configuration, operating system, monitoring…</li><li>Faster boot / configuration time because all your software is pre-packaged</li></ul></li><li>AMI are built for a <strong>specific region</strong> (and can be copied across regions)</li><li>You can launch EC2 instances from: <ul><li><strong>A Public AMI</strong>: AWS provided</li><li><strong>Your own AMI</strong>: you make and maintain them yourself</li><li><strong>An AWS Marketplace AMI</strong>: an AMI someone else made</li></ul></li><li>Before creating an AMI, <strong>make sure the instance is stopped</strong> (for data integrity)</li></ul><h2 id="ebs-elastic-block-store" tabindex="-1">EBS - Elastic Block Store <a class="header-anchor" href="#ebs-elastic-block-store" aria-label="Permalink to “EBS - Elastic Block Store”">​</a></h2><ul><li>An EBS Volume is a <strong>network drive</strong> that can attached and detached to a instance while they run allowing this instance to <strong>persist data</strong></li><li>Can only be <strong>mounted to one instance at a time</strong></li><li><strong>Limitations</strong>: <ul><li>bound to a <strong>specific AZ</strong></li><li>Have a <strong>provisoned capacity</strong></li></ul></li><li><strong>Snapshots</strong>: <ul><li>Recommended to <strong>detach a volume before this operation</strong></li><li>Snapshots has <strong>not limitations across AZ or Region</strong></li><li><strong>Features</strong>: <ul><li><strong>EBS Snapshot Archive</strong><ul><li>Move a Snapshot to an ”archive tier” that is 75% cheaper</li><li>Takes within 24 to 72 hours for restoring the archive</li></ul></li><li><strong>Recycle Bin for EBS Snapshots</strong><ul><li>Setup rules to retain deleted snapshots so you can recover them after an accidental deletion</li><li>Specify retention (from 1 day to 1 year)</li></ul></li><li><strong>Fast Snapshot Restore (FSR)</strong><ul><li>Force full initialization of snapshot to have no latency on the first use (high costs)</li></ul></li></ul></li></ul></li><li><strong>Volume Types</strong>: <ul><li><strong>SSD</strong>: <ul><li><strong>General purpose SSD</strong> (gp2, gp3): balances price and performance for a wide variety of workloads</li><li><strong>Provisioned IOPS (PIOPS) SSD</strong> (io1, io2): Highest-performance SSD volume for mission-critical low-latency or high-throughput workloads <ul><li><strong>Use cases</strong>: databases workloads (sensitive to storage perf and consistency)</li><li><strong>Multi-Attach Support</strong>: <ul><li>Each instance has full read &amp; write permissions to the high-performance volume</li><li><strong>Use cases</strong>: <ul><li>Achieve <strong>higher application availability</strong> in clustered Linux applications (ex: Teradata)</li><li>Applications must manage concurrent write operations</li></ul></li><li>Up to 16 EC2 Instances at a time</li><li>Must use a file system that’s cluster-aware (not XFS, EXT4, etc…)</li></ul></li></ul></li></ul></li><li><strong>HDD</strong><ul><li><strong>Throughput Optimized HDD</strong> (st1): Low cost HDD volume designed for frequently accessed, throughput- intensive workloads <ul><li><strong>Use cases</strong>: Big Data, Data Warehouses, Log Processing</li></ul></li><li><strong>Cold HDD</strong> (sc1): Lowest cost HDD volume designed for less frequently accessed workloads <ul><li><strong>Use cases</strong>: Scenarios where lowest cost is important</li></ul></li></ul></li></ul></li><li><strong>Encryption</strong><ul><li>An encrypted EBS volume has the following <strong>characteristics</strong>: <ul><li>Data at rest is encrypted inside the volume</li><li>All the data in flight moving between the instance and the volume is encrypted</li><li>All snapshots are encrypted</li><li>All volumes created from the snapshot</li></ul></li><li>Encryption has a minimal impact on latency</li><li>EBS Encryption leverages keys from KMS (AES-256)</li></ul></li></ul><details class="details custom-block"><summary>EBS Volume Types summary</summary><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Max IOPS</th><th>Max Throughput</th><th>Volume Size Range</th><th>Durability</th></tr></thead><tbody><tr><td><code>gp3</code></td><td>SSD</td><td>16,000</td><td>1,000 MiB/s</td><td>1 GiB – 16 TiB</td><td>99.8%</td></tr><tr><td><code>gp2</code></td><td>SSD</td><td>16,000</td><td>250 MiB/s</td><td>1 GiB – 16 TiB</td><td>99.8%</td></tr><tr><td><code>io2</code></td><td>SSD</td><td>64,000</td><td>1,000 MiB/s</td><td>4 GiB – 16 TiB</td><td>99.999%</td></tr><tr><td><code>io1</code></td><td>SSD</td><td>64,000</td><td>1,000 MiB/s</td><td>4 GiB – 16 TiB</td><td>99.8%</td></tr><tr><td><code>st1</code></td><td>HDD</td><td>500</td><td>500 MiB/s</td><td>125 GiB – 16 TiB</td><td>99.8%</td></tr><tr><td><code>sc1</code></td><td>HDD</td><td>250</td><td>250 MiB/s</td><td>125 GiB – 16 TiB</td><td>99.8%</td></tr></tbody></table></details><h2 id="efs-elastic-file-system" tabindex="-1">EFS - Elastic File System <a class="header-anchor" href="#efs-elastic-file-system" aria-label="Permalink to “EFS - Elastic File System”">​</a></h2><ul><li><strong>NFS file system</strong> that allows multiple EC2 instances to access the same shared file system concurrently</li><li><strong>Configuration</strong>: <ul><li><strong>Performance Modes</strong> (set at EFS creation time): <ul><li><strong>General Purpose (default)</strong>: latency-sensitive use cases (web server, CMS, etc…)</li><li><strong>Max I/O</strong>: higher latency, throughput, highly parallel (big data, media processing)</li></ul></li><li><strong>Throughput Modes</strong>: <ul><li><strong>Bursting</strong>: 1 TB = 50MiB/s + burst of up to 100MiB/s</li><li><strong>Provisioned</strong>: set your throughput regardless of storage size, ex: 1 GiB/s for 1 TB storage</li><li><strong>Elastic</strong>: automatically scales throughput up or down based on your workloads <ul><li>Up to 3GiB/s for reads and 1GiB/s for writes</li><li>Used for unpredictable workloads</li></ul></li></ul></li></ul></li><li><strong>Storage Classes</strong>: <ul><li><strong>Storage Tiers</strong>: <ul><li><strong>Standard</strong>: for frequently accessed files</li><li><strong>Infrequent access (EFS-IA)</strong>: cost to retrieve files, lower price to store.</li><li><strong>Archive</strong>: rarely accessed data (few times each year), 50% cheaper</li></ul></li><li><strong>Availability and durability</strong>: <ul><li><strong>Standard</strong>: Multi-AZ, great for prod</li><li><strong>One Zone</strong>: One AZ, great for dev, backup enabled by default, compatible with IA (EFS One Zone-IA)</li></ul></li><li><strong>Features</strong>: <ul><li><strong>Lifecycle Policies</strong>: allows to move files between storage tiers for cost savings</li></ul></li></ul></li><li><strong>Use cases</strong>: <ul><li>Content management and web serving</li><li>Big data and analytics workloads</li><li>Development environments and CI/CD pipelines</li></ul></li><li>Uses: <ul><li><strong>NFSv4.1 protocol</strong></li><li><strong>Security group</strong> to control access to EFS</li></ul></li><li><strong>Encryption at rest</strong> using KMS</li><li>File system <strong>scales automatically</strong>, <strong>pay-per-use</strong></li><li><strong>Limitations</strong>: <ul><li><strong>Not compatible with Windows based AMI</strong></li></ul></li></ul><h2 id="saving-plans" tabindex="-1">Saving Plans <a class="header-anchor" href="#saving-plans" aria-label="Permalink to “Saving Plans”">​</a></h2><ul><li>On-Demand Instances</li><li>Reserved Instances (1 &amp; 3 years)</li><li>Convertible Reserved Instances</li><li>Savings Plans (1 &amp; 3 years)</li><li>Spot Instances</li><li>Dedicated Hosts</li><li>Dedicated Instances</li><li>Capacity Reservations</li></ul><details class="details custom-block"><summary>Details</summary><h3 id="_1-on-demand-instances" tabindex="-1">1. On-Demand Instances <a class="header-anchor" href="#_1-on-demand-instances" aria-label="Permalink to “1. On-Demand Instances”">​</a></h3><ul><li>Pay for what you use ( per second/hour depending on the os )</li><li>Highest cost but no upfront payment</li><li>No long-term commitment</li><li>Recommended for short-term and un-interrupted workloads, where you can&#39;t predict how the application will behave</li></ul><h3 id="_2-reserved-instances-1-3-years" tabindex="-1">2. Reserved Instances (1 &amp; 3 years) <a class="header-anchor" href="#_2-reserved-instances-1-3-years" aria-label="Permalink to “2. Reserved Instances (1 &amp; 3 years)”">​</a></h3><ul><li>Up to <strong>72% discount</strong> compared to On-demand</li><li>You reserve a <strong>specific instance attributes</strong> ( Instance Type, Region, Tenancy, OS )</li><li><strong>Reservation Period</strong> : 1 year (+discount) or 3 years (+++discount)</li><li><strong>Payment Options</strong> : No Upfront (+), Partial Upfront (++), All Upfront (+++)</li><li><strong>Reserved Instance’s Scope</strong> : Regional or Zonal ( reserve capacity in an AZ )</li><li>Recommended for steady-state usage applications ( think database )</li><li>You can buy and sell in the Reserved Instance Marketplace</li></ul><h4 id="_2-1-convertible-reserved-instances" tabindex="-1">2.1 Convertible Reserved Instances <a class="header-anchor" href="#_2-1-convertible-reserved-instances" aria-label="Permalink to “2.1 Convertible Reserved Instances”">​</a></h4><ul><li>Can change the EC2 instance type, instance family, OS, scope and tenancy</li><li>Up to 66% discount</li></ul><h3 id="_3-savings-plans-1-3-years" tabindex="-1">3. Savings Plans (1 &amp; 3 years) <a class="header-anchor" href="#_3-savings-plans-1-3-years" aria-label="Permalink to “3. Savings Plans (1 &amp; 3 years)”">​</a></h3><ul><li>Get a discount based on long-term usage (up to 72% - same as Reserved Instances)</li><li>Commit to a certain type of usage ($10/hour for 1 or 3 years)</li><li>Usage beyond EC2 Savings Plans is billed at the On-Demand price</li><li>Locked to a specific instance family &amp; AWS region (e.g., M5 in us-east-1) <ul><li>Flexible across: <ul><li>Instance Size (e.g., m5.xlarge, m5.2xlarge)</li><li>OS (e.g., Linux, Windows)</li><li>Tenancy (Host, Dedicated, Default)</li></ul></li></ul></li></ul><h3 id="_4-spot-instances" tabindex="-1">4. Spot Instances <a class="header-anchor" href="#_4-spot-instances" aria-label="Permalink to “4. Spot Instances”">​</a></h3><ul><li>Can get a discount of up to 90% compared to On-demand</li><li>Instances that you can “lose” at any point of time if your max price is less than the current spot price</li><li>The <strong>MOST cost-efficient</strong> instances in AWS</li><li><strong>Useful for workloads that are resilient to failure</strong><ul><li>Batch jobs</li><li>Data analysis</li><li>Image processing</li><li>Any distributed workloads</li><li>Workloads with a flexible start and end time</li></ul></li><li><strong>Not suitable for critical jobs or databases</strong></li></ul><h3 id="_5-dedicated-hosts" tabindex="-1">5. Dedicated Hosts <a class="header-anchor" href="#_5-dedicated-hosts" aria-label="Permalink to “5. Dedicated Hosts”">​</a></h3><ul><li>A physical server with EC2 instance capacity fully dedicated to your use</li><li>Allows you address <strong>compliance requirements and use your existing server - bound software licenses</strong> (per-socket, per-core, pe—VM software licenses)</li><li><strong>Purchasing Options</strong>: <ul><li><strong>On-demand</strong> – pay per second for active Dedicated Host</li><li><strong>Reserved</strong> - 1 or 3 years (No Upfront, Partial Upfront, All Upfront)</li></ul></li><li>The most expensive option</li><li>Useful for <strong>software that have complicated licensing model</strong> (BYOL – Bring Your Own License)</li><li>Or for companies that have strong regulatory or compliance needs</li></ul><h3 id="_6-dedicated-instances" tabindex="-1">6. Dedicated Instances <a class="header-anchor" href="#_6-dedicated-instances" aria-label="Permalink to “6. Dedicated Instances”">​</a></h3><ul><li>Instances run on hardware that’s dedicated to you</li><li>May share hardware with other instances in same account</li><li>No control over instance placement (can move hardware after Stop / Start)</li></ul><h3 id="_7-capacity-reservations" tabindex="-1">7. Capacity Reservations <a class="header-anchor" href="#_7-capacity-reservations" aria-label="Permalink to “7. Capacity Reservations”">​</a></h3><ul><li>Reserve <strong>On-Demand</strong> instances capacity in a specific AZ for any duration</li><li>You always have access to EC2 capacity when you need it</li><li><strong>No time commitment</strong> (create/cancel anytime), <strong>no billing discounts</strong></li><li>Combine with Regional Reserved Instances and Savings Plans to benefit from billing discounts</li><li>You’re charged at On-Demand rate whether you run instances or not</li><li>Suitable for short-term, uninterrupted workloads that needs to be in a specific AZ</li></ul></details>`,29)]))}const u=s(n,[["render",l]]);export{g as __pageData,u as default};
