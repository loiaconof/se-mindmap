import{G as l,a as s,o as n,g as e,ah as r,L as i,H as o,j as d}from"./chunks/framework.Ddlh_Zg3.js";const c=`
flowchart LR
    subgraph CLIENTS [Clients]
        direction TB
        Client1["üë§"]
        Client2["üë§"]
        Client3["üë§"]
    end

    LB{"Load Balancer"}

    subgraph EC2S [EC2 Instances]
        direction TB
        EC2_1["EC2 Instance"]
        EC2_2["EC2 Instance"]
    end

    Client1 --> LB
    Client2 --> LB
    Client3 --> LB

    LB --> EC2_1
    LB --> EC2_2
`,g={class:"details custom-block"},m=JSON.parse('{"title":"Elastic Load Balancers (ELB)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/cloud/aws/services/ec2/load-balancers.md","filePath":"docs/cloud/aws/services/ec2/load-balancers.md"}'),u={name:"docs/cloud/aws/services/ec2/load-balancers.md"},L=Object.assign(u,{setup(p){return(b,a)=>{const t=l("vue-mermaid-string");return n(),s("div",null,[a[1]||(a[1]=e("h1",{id:"elastic-load-balancers-elb",tabindex:"-1"},[i("Elastic Load Balancers (ELB) "),e("a",{class:"header-anchor",href:"#elastic-load-balancers-elb","aria-label":"Permalink to ‚ÄúElastic Load Balancers (ELB)‚Äù"},"‚Äã")],-1)),a[2]||(a[2]=e("p",null,"Load Balances are servers that forward traffic to multiple servers (e.g. EC2 instances) downstream.",-1)),e("details",g,[a[0]||(a[0]=e("summary",null,"Diagram",-1)),o(t,{value:d(c)},null,8,["value"])]),a[3]||(a[3]=r('<h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to ‚ÄúTypes‚Äù">‚Äã</a></h2><h3 id="_1-clb-v1-classic-load-balancer-deprecated" tabindex="-1">1. CLB v1 (Classic Load Balancer) (Deprecated) <a class="header-anchor" href="#_1-clb-v1-classic-load-balancer-deprecated" aria-label="Permalink to ‚Äú1. CLB v1 (Classic Load Balancer) (Deprecated)‚Äù">‚Äã</a></h3><ul><li>Supports TCP (Layer 4), HTTP &amp; HTTPS (Layer 7)</li><li>Health checks are TCP or HTTP based</li><li>Fixed hostname XXX.region.elb.amazonaws.com</li></ul><h3 id="_2-alb-v2-application-load-balancer" tabindex="-1">2. ALB v2 (Application Load Balancer) <a class="header-anchor" href="#_2-alb-v2-application-load-balancer" aria-label="Permalink to ‚Äú2. ALB v2 (Application Load Balancer)‚Äù">‚Äã</a></h3><ul><li>Application load balancers is <strong>Layer 7</strong> (HTTP)</li><li><strong>Supports</strong>: <ul><li><strong>HTTP/2</strong> and <strong>WebSocket</strong></li><li><strong>redirects</strong> (e.g. from HTTP to HTTPS)</li></ul></li><li><strong>Routing tables to different target groups</strong>: <ul><li>Routing <strong>based on path</strong> in URL</li><li>Routing <strong>based on hostname</strong> in URL</li><li>Routing <strong>based on Query</strong> String, Headers</li></ul></li><li><strong>Target Groups</strong>: <ul><li><strong>EC2 instances</strong> (can be managed by an Auto Scaling Group): HTTP</li><li><strong>ECS tasks</strong> (managed by ECS itself): HTTP</li><li><strong>Lambda functions</strong>: HTTP request is translated into a JSON event</li><li><strong>IP Addresses</strong>: must be private IPs</li></ul></li><li>ALB <strong>can route to multiple target groups</strong></li><li><strong>Health checks</strong> are at the <strong>target group level</strong></li></ul><h3 id="_3-nlb-v2-network-load-balancer" tabindex="-1">3. NLB v2 (Network Load Balancer) <a class="header-anchor" href="#_3-nlb-v2-network-load-balancer" aria-label="Permalink to ‚Äú3. NLB v2 (Network Load Balancer)‚Äù">‚Äã</a></h3><ul><li>NLB operates at <strong>Layer 4</strong> and allows to forward TCP and UDP traffic to EC2 instances</li><li>High performance, handling millions of request per seconds with Ultra-low latency</li><li>Has one static IP per AZ</li><li><strong>Supports</strong>: <ul><li>Elastic IP assignment</li></ul></li><li><strong>Target Groups</strong>: <ul><li><strong>EC2 Instances</strong></li><li><strong>IP Addresses</strong> (must be private IPs)</li><li><strong>ALB</strong> (Application Load Balancer)</li></ul></li><li><strong>Health Checks</strong> support the <strong>TCP, HTTP and HTTPS Protocols</strong></li></ul><h3 id="_4-glb-gateway-load-balancer" tabindex="-1">4. GLB (Gateway Load Balancer) <a class="header-anchor" href="#_4-glb-gateway-load-balancer" aria-label="Permalink to ‚Äú4. GLB (Gateway Load Balancer)‚Äù">‚Äã</a></h3><ul><li>GLB operates at <strong>Layer 3</strong></li><li><strong>Deploy</strong>, <strong>scale</strong>, and <strong>manage</strong> a <strong>fleet of 3rd party network virtual appliances in AWS</strong> (e.g. Firewalls, Intrusion Detection and Prevention Systems, Deep Packet Inspection Systems, payload manipulation, ‚Ä¶)</li><li>Combines the following functions: <ul><li><strong>Transparent Network Gateway</strong>: single entry/exit for all traffic</li><li><strong>Load Balancer</strong>: distributes traffic to your virtual appliances</li></ul></li><li><strong>Uses the GENEVE protocol</strong> on <strong>port 6081</strong></li><li><strong>Target Groups</strong>: <ul><li><strong>EC2 Instances</strong></li><li><strong>IP Addresses</strong> (must be private IPs)</li></ul></li></ul><h2 id="sticky-session-session-affinity" tabindex="-1">Sticky Session (Session Affinity) <a class="header-anchor" href="#sticky-session-session-affinity" aria-label="Permalink to ‚ÄúSticky Session (Session Affinity)‚Äù">‚Äã</a></h2><p>Allows to implement stickiness so that the same client is always redirected to the same instance behind a load balancer</p><ul><li><strong>Allowed Load Balancer Types</strong><ul><li><strong>CLB</strong> (Classic Load Balancer)</li><li><strong>ALB</strong> (Application Load Balancer)</li><li><strong>NLB</strong> (Network Load Balancer)</li></ul></li><li>To allow stickiness, <strong>a cookie is set to the client</strong>: <ul><li><strong>Cookie Types</strong><ul><li><strong>Application-based Cookies</strong><ul><li><strong>Custom cookie</strong>: <ul><li>Generated by the target</li><li>Can include any custom attributes required by the application</li><li>Cookie name must be specified individually for each target group (AWSALB, AWSALBAPP, or AWSALBTG names are reserved by the ELB)</li></ul></li><li><strong>Application cookie</strong>: <ul><li>Generated by the load balancer</li><li>Cookie name is AWSALBAPP</li></ul></li></ul></li><li><strong>Duration-based Cookies</strong><ul><li>Cookie generated by the load balancer</li><li>Cookie name is AWSALB for ALB, AWSELB for CLB</li></ul></li></ul></li></ul></li><li><strong>Limitations</strong>: <ul><li><strong>may bring imbalance</strong> to the load over the EC2 Instances</li></ul></li></ul><h2 id="cross-zone-load-balancing" tabindex="-1">Cross Zone Load Balancing <a class="header-anchor" href="#cross-zone-load-balancing" aria-label="Permalink to ‚ÄúCross Zone Load Balancing‚Äù">‚Äã</a></h2><p>Allows a load balancer instance to distribute evenly across all registered instances in all AZ if enbled.</p><details class="details custom-block"><summary>Cross Zone Load Balancing differs from one load balancer type to another</summary><table tabindex="0"><thead><tr><th>Load Balancer Type</th><th>Default</th><th>Charges for inter AZ data</th></tr></thead><tbody><tr><td>Application Load Balancer</td><td>Enabled</td><td>Free</td></tr><tr><td>Network Load Balancer</td><td>Disabled</td><td>Yes</td></tr><tr><td>Gateway Load Balancer</td><td>Disabled</td><td>Yes</td></tr></tbody></table></details><h2 id="deregistration-delay" tabindex="-1">Deregistration Delay <a class="header-anchor" href="#deregistration-delay" aria-label="Permalink to ‚ÄúDeregistration Delay‚Äù">‚Äã</a></h2><p>Deregistration Delay is <strong>the time an ELB waits before removing a target after it&#39;s deregistered</strong>.</p><p>During this period, the instance finishes ongoing requests but receives no new ones. This helps avoid service disruption.</p><p>The default delay is 300 seconds, but it can be adjusted based on the application‚Äôs needs (0 means disabled).</p>',19))])}}});export{m as __pageData,L as default};
