import{_ as t,a as i,o as n,ah as s}from"./chunks/framework.Ddlh_Zg3.js";const u=JSON.parse('{"title":"Event Storming","description":"","frontmatter":{},"headers":[],"relativePath":"docs/software-design-architecture/ddd/event-storming.md","filePath":"docs/software-design-architecture/ddd/event-storming.md"}'),o={name:"docs/software-design-architecture/ddd/event-storming.md"};function a(r,e,l,d,c,g){return n(),i("div",null,e[0]||(e[0]=[s('<h1 id="event-storming" tabindex="-1">Event Storming <a class="header-anchor" href="#event-storming" aria-label="Permalink to “Event Storming”">​</a></h1><p>Event Storming is a low-tech activity for a group of people to brainstorm and rapidly model business process.</p><p>The workshop can be facilitated for many reasons:</p><ul><li>Build a ubiquitous language</li><li>Model the business process</li><li>Explore new business requirements</li><li>Recover domain knowledge</li><li>Explore ways to iprove an existing business process</li><li>Onboard new team members</li></ul><h2 id="the-event-storming-process" tabindex="-1">The Event Storming process <a class="header-anchor" href="#the-event-storming-process" aria-label="Permalink to “The Event Storming process”">​</a></h2><ul><li>Unstructured exploration <ul><li>list all domain events, no need to worry about ordering</li></ul></li><li>Timelines <ul><li>organize the domain events flow, starting with the &quot;<strong>Happy path schenario</strong>&quot;</li></ul></li><li>Pain Points <ul><li>identify domain events that require attention, make there inefficiencies explicit so that will be easy to return to them as the Event Storming session progresses</li></ul></li><li>Pivotal Events <ul><li>identify significant business events that indicates a change in the context or phase</li></ul></li><li>Commands <ul><li>indentify commands, system&#39;s opeations describing what triggered the event of flow of events</li></ul></li><li>Policies <ul><li>identify <strong>automation policies</strong>, events that trigger commands</li></ul></li><li>Read Models <ul><li>indentify users interaction that trigger commands</li></ul></li><li>External Systems <ul><li>augment the model with external system, external system any system that is not part of the domain being explored</li></ul></li><li>Aggregates <ul><li>organize related concepts in aggregates, an aggregate receives commands and produces events</li></ul></li><li>Bounded Contexts <ul><li>add aggregates relations, those groups of aggregates form natural candidates for bounded contexts&#39; boundaries</li></ul></li></ul>',6)]))}const h=t(o,[["render",a]]);export{u as __pageData,h as default};
